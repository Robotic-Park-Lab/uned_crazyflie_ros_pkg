%% Crazyflie PID(Z) Controllers% X_T -> Period of T signal% X_s = [KP; KI; KD] -> PID(s) controller% X_q = [Q0; Q1; Q2] -> PID(z) controller%% On Board ControllerCrazyflie_PIDsfs_inner= 500;  % 500 Hzfs_outer= 250;  % 250 Hzfs_ext  = 100;  % 100 Hzfs_test = 50;   % 50 Hz% CONTROLER MIXER: MatrixMCO =[1,-1/2,-1/2,-1;      1, 1/2,-1/2, 1;      1, 1/2, 1/2,-1;      1,-1/2, 1/2, 1];%% RATE CONTROLLER% PID DphiDphi_T = 1/fs_inner;Dphi_q = [ Dphi_s(1)+Dphi_s(2)*Dphi_T/2+Dphi_s(3)/Dphi_T;          -Dphi_s(1)+Dphi_s(2)*Dphi_T/2-2*Dphi_s(3)/Dphi_T;           Dphi_s(3)/Dphi_T];% PID DthetaDtheta_T = 1/fs_inner;Dtheta_q = [ Dtheta_s(1)+Dtheta_s(2)*Dtheta_T/2+Dtheta_s(3)/Dtheta_T;            -Dtheta_s(1)+Dtheta_s(2)*Dtheta_T/2-2*Dtheta_s(3)/Dtheta_T;             Dtheta_s(3)/Dtheta_T];% PID DpsiDpsi_T = 1/fs_inner;Dpsi_q = [ Dpsi_s(1)+Dpsi_s(2)*Dpsi_T/2+Dpsi_s(3)/Dpsi_T;          -Dpsi_s(1)+Dpsi_s(2)*Dpsi_T/2-2*Dpsi_s(3)/Dpsi_T;           Dpsi_s(3)/Dpsi_T];%% ATTITUDE CONTROLLERphi_theta_limit = 100*pi;% PID phiPhi_T = 1/fs_outer;Phi_q = [ Phi_s(1)+Phi_s(2)*Phi_T/2+Phi_s(3)/Phi_T;         -Phi_s(1)+Phi_s(2)*Phi_T/2-2*Phi_s(3)/Phi_T;          Phi_s(3)/Phi_T];% PID thetaTheta_T = 1/fs_outer;Theta_q = [ Theta_s(1)+Theta_s(2)*Theta_T/2+Theta_s(3)/Theta_T;           -Theta_s(1)+Theta_s(2)*Theta_T/2-2*Theta_s(3)/Theta_T;            Theta_s(3)/Theta_T];%% Off Board Controller% YAW CONTROLLERYaw_delta = 1;Yaw_T = 1/fs_inner;Yaw_q = [ Yaw_s(1)+Yaw_s(2)*Yaw_T/2+Yaw_s(3)/Yaw_T;         -Yaw_s(1)+Yaw_s(2)*Yaw_T/2-2*Yaw_s(3)/Yaw_T;          Yaw_s(3)/Yaw_T];       % ALTITUDE CONTROLLERZ_T = 1/fs_test;Z_delta = 0.03;Z_q = [ Z_s(1)+Z_s(2)*Z_T/2+Z_s(3)/Z_T;       -Z_s(1)+Z_s(2)*Z_T/2-2*Z_s(3)/Z_T;        Z_s(3)/Z_T];W_T = 1/fs_test;W_q = [ W_s(1)+W_s(2)*W_T/2+W_s(3)/W_T;       -W_s(1)+W_s(2)*W_T/2-2*W_s(3)/W_T;        W_s(3)/W_T];% X-Y POSITION CONTROLLER% Limit control signalxyv_lim = 30; % [rad/s]XY_delta = 0.03;% X -> phiX_T = 1/fs_test;X_q = [ X_s(1)+X_s(2)*X_T/2+X_s(3)/X_T;       -X_s(1)+X_s(2)*X_T/2-2*X_s(3)/X_T;        X_s(3)/X_T];U_T = 1/fs_test;U_q = [ U_s(1)+U_s(2)*U_T/2+U_s(3)/U_T;       -U_s(1)+U_s(2)*U_T/2-2*U_s(3)/U_T;        U_s(3)/U_T];% Y -> thetaY_T = 1/fs_test;Y_q = [ Y_s(1)+Y_s(2)*Y_T/2+Y_s(3)/Y_T;       -Y_s(1)+Y_s(2)*Y_T/2-2*Y_s(3)/Y_T;        Y_s(3)/Y_T];V_T = 1/fs_test;V_q = [  V_s(1)+V_s(2)*V_T/2+V_s(3)/V_T;        -V_s(1)+V_s(2)*V_T/2-2*V_s(3)/V_T;         V_s(3)/V_T];